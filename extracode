class ViewPost(Handler):
    def render_front(self, title="", entry="", error="", entries=""):
        #Having LIMIT 5 here makes no difference, but the variable 'entries' is required.
#        entries = db.GqlQuery("SELECT * FROM Entry ORDER BY created DESC")
        self.render("viewpost.html", error = error, id = id)
    def get(self, id):
        #pass
        #self.response.write(id)
        int_id = int(id)
        single_entry = Entry.get_by_id(int_id)
        self.render_front()

viewpost.html
{% extends "base.html" %}
{% block content %}
{% if error %}

    {{error}}

{% else %}
<br>
<br>
<div class="post">
    <div class="post-title">
        {{ title }}
    </div>

    <hr>
    <div name="post-body">{{ blog }}</div>
</div>
{% endif %}
{% endblock %}

self.render("viewpost.html", title = entry.title, entry = entry.entry)


class ViewPost(Handler):
	int_id = Entry.get_by_id( int(id) )
    def get(self, id):
        single_entry = Entry.get_by_id(int_id)
        self.render("viewpost.html", title = entry.title, entry.entry = entry, error = error)


        class ViewPost(Handler):
        	int_id = Entry.get_by_id( int(id) )
            def get(self, id):
                self.render("viewpost.html", title = entry.title, entry.entry = entry, error = error)


app = webapp2.WSGIApplication([('/', MainPage), ('/blog', Blog), ('/newpost', NewPost), webapp2.Route('/blog/<id:\d+>', ViewPost)], debug=True)

<body>
    <h1>Blog</h1>
    {% block content %}

    {% endblock %}
</body>
</html>
